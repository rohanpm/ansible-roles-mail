---
- name: Install packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
  - isync
  - notmuch
  - emacs-notmuch
  become: yes

- name: Ensure maildir exists
  file:
    name: "{{ mail_dir }}"
    state: directory

- name: Install mbsync config
  template:
    src: mbsyncrc.j2
    dest: "{{ lookup('env', 'HOME') }}/.mbsyncrc"

- name: Ensure systemd dir exists
  file:
    name: ~/.config/systemd/user
    state: directory

- name: Install notmuch config
  template:
    src: notmuch-config.j2
    dest: "{{ lookup('env', 'HOME') }}/.notmuch-config"

- name: Ensure emacs.d exists
  file:
    name: ~/.emacs.d
    state: directory

- name: Ensure notmuch loaded by emacs
  lineinfile:
    create: yes
    name: ~/.emacs.d/init.el
    line: (require 'notmuch)

- name: Set emacs variables
  emacs_custom:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:

  # Use sendmail to send mails; this should be configured to
  # connect to remote SMTP service if needed
  - name: send-mail-function
    value: (quote sendmail-send-it)

  # When I archive a message I'd like it to appear as read
  - name: notmuch-archive-tags
    value: (quote ("-inbox" "-unread"))

  # We expect the mail server to track sent mails
  # FIXME: should I really do this?  There will be no record
  # of the mail if something goes wrong?
  - name: notmuch-fcc-dirs
    value: nil

- name: Include msmtp tasks
  include: msmtp.yml
  when: mail_mta == 'msmtp'

- name: Include sendmail tasks
  include: sendmail.yml
  when: mail_mta == 'sendmail'

- name: Include exim tasks
  include: exim.yml
  when: mail_mta == 'exim'

- name: Install units
  template:
    src: "{{ item }}.j2"
    dest: ~/.config/systemd/user/{{ item }}
  with_items:
  - mbsync.service
  - mbsync.timer
  - notmuch-compact.service
  - notmuch-compact.timer

- name: Enable units
  systemd:
    name: "{{ item }}"
    user: yes
    daemon_reload: yes
    enabled: yes
  with_items:
  - mbsync.timer
  - notmuch-compact.timer

- name: Check timer start times
  timediff:
    src: file:~/.config/systemd/user/{{ item }}.timer
    dest: systemd:user:{{ item }}.timer
  register: timediff
  with_items:
  - mbsync
  - notmuch-compact

- name: Restart timer if needed
  systemd:
    name: "{{ item.item }}.timer"
    user: yes
    state: restarted
  when: item.newer
  loop: "{{ timediff.results }}"
